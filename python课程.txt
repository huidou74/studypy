
###################aming---python

李子岩  基础部分############

	1.1  为什么学习python  
	1.2  Python的安装  
	1.3  Python的文件类型  
	1.4  Python的变量  
	1.5  Python的数值和字符串  

	1.6  元组  
	1.7  列表  
	1.8  字典  
	1.9  字典练习  

	2.0  流程控制--if条件（1）  
	2.1  流程控制--if条件（2） 
	2.2  流程控制--for序列  
	2.3  流程控制--for字典  

	2.4  循环退出  
	2.5  流程控制--while  
	2.6  使用for循环遍历文件  
	2.7  使用while循环遍历文件  

	2.8  统计系统剩余的内存  
	2.9  数据类型转换(计算mac地址)  
	3.0  数据类型转换(列表与字典相互转换)  

作业:
	1:写一个python交互的登陆系统
	2:模拟mysql查询语句
		id		name	age		class	
		1		zhang3	25		python1班
		2		li4		23		python1班
		3		wang5	24		python2班
		4		zhu6	21		python1班
		5		zhao7	27		python1班
		6		liu8	29		python2班
		7		song2	25		python1班
		


李子岩   基础升级 #####################

	1.1  函数定义  
	1.2  函数的参数 
	1.3  函数的默认参数  
	1.4  函数的变量 
	1.5  函数的返回值  

	1.6  多类型传值和冗余参数  
	1.7  函数的递归调用  
	1.8  递归列出目录里的文件 
	1.9  匿名函数  

	2.0  内建函数（1）  
	2.1  内建函数（2)  
	2.2  内建函数（3)  
	2.3  内建函数（4） 
	2.4  内建函数（5） 

	2.5  模块使用（1）  
	2.6  模块使用（2）  
	
	
	2.7  面向对象介绍 
	2.8  类的属性  
	2.9  类的方法  
	3.0  类的内置方法  
	3.1  类的继承（1）  
	3.2  类的继承（2）  
	3.3  类的属性总结  
	3.4  类的方法总结  

	3.5  rc脚本(类的定义与脚本的结构)  
	3.6  rc脚本（start方法）  
	3.7  rc脚本(stop和status方法)  
	3.8  rc脚本(以daemon方式启动)  




#####第二阶段django基础
	1:基本流程
		https://www.processon.com/view/5ac1e2c9e4b0cf24e963ecd1
	2:urls基本讲解
	3:template基本讲解
	4:models基本讲解
	5:django基本命令使用
	6:urls补充
	7:template俩大功能
	8:views视图三大返回
	10:admin的基本使用
	
	
#####第三阶段django进阶
	1:ORM基础
		①:ORM-models补充
		②:ORM基本增删改查
		③:ORM一对多，多对多关系
		④:ORM跨表操作
	
	2:ORM高级部分
		双下划线，条件查询
		惰性机制(迭代，切片)
		F查询和Q查询
		反向查找的related_name
	3:分页器的使用
	4:cookie和session  
	5:FBV和CBV
	6:session+FBV，CBV实现用户登录验证
	7:form表单
	8:中间件						https://www.processon.com/view/5af10609e4b001f7e0c7bbd2  https://www.processon.com/view/5ac1ddf6e4b00dc8a0267e26
		django的 字符串导入方式
		自定义中间件
	9:部署上线uwsgi+nginx+django
	

####第四阶段 项目部分 

一:主机管理CMDB
		1:server端:				https://www.processon.com/view/5ac1e306e4b09bf96ad60589
			①:针对 主机的增删改查 
			②:为客户端提供api
			③:封装调用客户端的按钮/接口
		2:客户端:				https://www.processon.com/view/5ad4062ae4b0f5fa24d8d181
			①:基于中间件的几种方法
			②:基于salt-stack+salt-api作为底层的处理方式
			③:基于面向对象的封装实现一键收集服务器信息
			④:代码优化
		

二:阿里云api			https://www.processon.com/view/5ac1e021e4b09bf96ad5f3d7
		通过api获取服务器信息(终于不用烦躁的写客户端咯)
		1:阿里云api使用入门(授人以鱼不如授人以渔)
		2:阿里云api代码上手,获取服务器资产信息
		3:阿里云api 获取服务器监控信息
		4:阿里云api 使用 webssh
	
		
三:权限系统				https://www.processon.com/view/5ac1daa9e4b0cf24e963b94d	
		1:根据员工不同岗位定制不一样的页面
		2:动态加载权限
		3:动态加载页面
		4:动态加载菜单
		5:动态加载页面
		增加内容:bootstrap套用
		
	
四:发布系统
		1:完全自己开发一套发布系统
			①:定时发布/立即发布
			②:文件推送,获取状态
			③:调用salt-api/ansible-api执行代码更新
		2:结合jenkins部署
			①:调用jenkins-api
			②:基于jenkins-api的数据库表设计
	
五:监控系统
		1:定时获取服务器监控信息入库
		2:页面展示成图
		3:触发邮件告警
		4:告警级别(结合权限系统)
		
六:批量增删改查
		不必再一个一个页面去手写，写一个通用的模板吧
		基于modelform,写一个类似于django-admin的模板
		通过 俩三行代码 就写出 一套增删改查，效率是不是很高啊
		
		

七:ansible源码导读(上线时间待定)	-->打算作为选修课
			
八:django-restfreamework源码导读(上线时间待定)	-->打算作为选修课